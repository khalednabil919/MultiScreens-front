{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/students.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"primeng/dropdown\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/inputtext\";\nfunction AddStudentComponent_small_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 15);\n    i0.ɵɵtext(1, \" Name is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddStudentComponent_small_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 15);\n    i0.ɵɵtext(1, \" Address is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddStudentComponent_small_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 15);\n    i0.ɵɵtext(1, \" School is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddStudentComponent_small_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 15);\n    i0.ɵɵtext(1, \" Grade is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return {\n    \"width\": \"100%\"\n  };\n};\nexport class AddStudentComponent {\n  constructor(fb, studentService) {\n    this.fb = fb;\n    this.studentService = studentService;\n    this.grades = [];\n    this.formStud = this.fb.group({\n      name: ['', Validators.required],\n      address: ['', Validators.required],\n      school: ['', Validators.required],\n      gradeId: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    console.log(\"11\");\n    this.studentService.getGrades().subscribe(grades => {\n      this.grades = grades.data;\n    }, error => {\n      console.log(error);\n    });\n  }\n  changeGrade(event) {\n    console.log(event);\n  }\n  addStudent() {\n    console.log('Student Added');\n  }\n  static {\n    this.ɵfac = function AddStudentComponent_Factory(t) {\n      return new (t || AddStudentComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.StudentsService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddStudentComponent,\n      selectors: [[\"app-add-student\"]],\n      decls: 25,\n      vars: 13,\n      consts: [[1, \"p-fluid\", \"grid\", \"formgrid\", 3, \"formGroup\"], [1, \"field\", \"col-12\", \"md:col-6\"], [\"for\", \"name\"], [1, \"p-input-icon-left\", \"w-full\"], [1, \"pi\", \"pi-user\"], [\"type\", \"text\", \"id\", \"name\", \"pInputText\", \"\", \"formControlName\", \"name\", \"placeholder\", \"Enter Name...\"], [\"class\", \"p-error block\", 4, \"ngIf\"], [\"for\", \"address\"], [\"type\", \"text\", \"id\", \"address\", \"pInputText\", \"\", \"formControlName\", \"address\", \"placeholder\", \"Enter Address...\"], [\"for\", \"school\"], [\"type\", \"text\", \"id\", \"school\", \"pInputText\", \"\", \"formControlName\", \"school\", \"placeholder\", \"Enter School Name...\"], [\"for\", \"GradeId\"], [\"id\", \"GradeId\", \"formControlName\", \"gradeId\", \"optionLabel\", \"name\", \"placeholder\", \"Select a Grade\", 3, \"options\", \"filter\", \"showClear\", \"editable\"], [1, \"col-12\"], [\"label\", \"Add Student\", 1, \"w-full\", 3, \"disabled\", \"click\"], [1, \"p-error\", \"block\"]],\n      template: function AddStudentComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"label\", 2);\n          i0.ɵɵtext(3, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"span\", 3);\n          i0.ɵɵelement(5, \"i\", 4)(6, \"input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(7, AddStudentComponent_small_7_Template, 2, 0, \"small\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 7);\n          i0.ɵɵtext(10, \"Address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 8);\n          i0.ɵɵtemplate(12, AddStudentComponent_small_12_Template, 2, 0, \"small\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 1)(14, \"label\", 9);\n          i0.ɵɵtext(15, \"School\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"input\", 10);\n          i0.ɵɵtemplate(17, AddStudentComponent_small_17_Template, 2, 0, \"small\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\", 1)(19, \"label\", 11);\n          i0.ɵɵtext(20, \"Grade\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"p-dropdown\", 12);\n          i0.ɵɵtemplate(22, AddStudentComponent_small_22_Template, 2, 0, \"small\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"div\", 13)(24, \"p-button\", 14);\n          i0.ɵɵlistener(\"click\", function AddStudentComponent_Template_p_button_click_24_listener() {\n            return ctx.addStudent();\n          });\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.formStud);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.formStud.controls[\"name\"].invalid && ctx.formStud.controls[\"name\"].dirty);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.formStud.controls[\"address\"].invalid && ctx.formStud.controls[\"address\"].dirty);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.formStud.controls[\"school\"].invalid && ctx.formStud.controls[\"school\"].dirty);\n          i0.ɵɵadvance(4);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(12, _c0));\n          i0.ɵɵproperty(\"options\", ctx.grades)(\"filter\", true)(\"showClear\", true)(\"editable\", true);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.formStud.controls[\"gradeId\"].invalid && ctx.formStud.controls[\"gradeId\"].dirty);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !ctx.formStud.valid);\n        }\n      },\n      dependencies: [i3.NgIf, i4.Dropdown, i5.Button, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.InputText],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAsBA,UAAU,QAAQ,gBAAgB;;;;;;;;;;ICOhDC,iCAA0G;IACtGA,kCACJ;IAAAA,iBAAQ;;;;;IAMRA,iCAAgH;IAC5GA,qCACJ;IAAAA,iBAAQ;;;;;IAORA,iCAA8G;IAC1GA,oCACJ;IAAAA,iBAAQ;;;;;IAgBRA,iCAAgH;IAC5GA,mCACJ;IAAAA,iBAAQ;;;;;;;;ADnChB,OAAM,MAAOC,mBAAmB;EAG9BC,YAAoBC,EAAc,EAASC,cAA8B;IAArD,OAAE,GAAFD,EAAE;IAAqB,mBAAc,GAAdC,cAAc;IAFzD,WAAM,GAAS,EAAE;IAYjB,aAAQ,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MACvBC,IAAI,EAAC,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAC9BC,OAAO,EAAC,CAAC,EAAE,EAACT,UAAU,CAACQ,QAAQ,CAAC;MAChCE,MAAM,EAAC,CAAC,EAAE,EAACV,UAAU,CAACQ,QAAQ,CAAC;MAC/BG,OAAO,EAAC,CAAC,EAAE,EAACX,UAAU,CAACQ,QAAQ;KAChC,CAAC;EAfyE;EAC3EI,QAAQ;IAENC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACjB,IAAI,CAACT,cAAc,CAACU,SAAS,EAAE,CAACC,SAAS,CAACC,MAAM,IAAE;MAChD,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,IAAI;IAC3B,CAAC,EAACC,KAAK,IAAE;MACPN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ;EAOAC,WAAW,CAACC,KAAW;IAErBR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;EACpB;EACAC,UAAU;IACRT,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC9B;;;uBAzBWZ,mBAAmB;IAAA;EAAA;;;YAAnBA,mBAAmB;MAAAqB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCVhC1B,+BAA2D;UAGjCA,oBAAI;UAAAA,iBAAQ;UAC9BA,+BAAuC;UACnCA,uBAA0B;UAE9BA,iBAAO;UACPA,wEAEQ;UACZA,iBAAM;UAENA,8BAAmC;UACVA,wBAAO;UAAAA,iBAAQ;UACpCA,4BAAsG;UACtGA,0EAEQ;UACZA,iBAAM;UAGNA,+BAAmC;UACXA,uBAAM;UAAAA,iBAAQ;UAClCA,6BAAwG;UACxGA,0EAEQ;UACZA,iBAAM;UAENA,+BAAmC;UACVA,sBAAK;UAAAA,iBAAQ;UAClCA,kCAUa;UACbA,0EAEQ;UACZA,iBAAM;UAGNA,gCAAoB;UACNA;YAAA,OAAS2B,gBAAY;UAAA,EAAC;UAAiE3B,iBAAW;;;UAlD9GA,wCAAsB;UAQUA,eAA0E;UAA1EA,mGAA0E;UAQ1EA,eAAgF;UAAhFA,yGAAgF;UAShFA,eAA8E;UAA9EA,uGAA8E;UAgBxGA,eAA2B;UAA3BA,0CAA2B;UAP3BA,oCAAkB;UASQA,eAAgF;UAAhFA,yGAAgF;UAOzDA,eAA4B;UAA5BA,8CAA4B","names":["Validators","i0","AddStudentComponent","constructor","fb","studentService","group","name","required","address","school","gradeId","ngOnInit","console","log","getGrades","subscribe","grades","data","error","changeGrade","event","addStudent","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Khaled\\Angular-Projects\\MultiScreen-Primeng\\src\\app\\students\\components\\add-student\\add-student.component.ts","D:\\Khaled\\Angular-Projects\\MultiScreen-Primeng\\src\\app\\students\\components\\add-student\\add-student.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { StudentsService } from '../../services/students.service';\nimport { Grade } from '../../models/Grade';\n\n@Component({\n  selector: 'app-add-student',\n  templateUrl: './add-student.component.html',\n  styleUrls: ['./add-student.component.css']\n})\nexport class AddStudentComponent implements OnInit{\n  grades:Grade[]=[];\n  selectedGrade:any;\n  constructor(private fb:FormBuilder,private studentService:StudentsService){}\n  ngOnInit()\n  {\n    console.log(\"11\")\n    this.studentService.getGrades().subscribe(grades=>{\n      this.grades = grades.data;\n    },error=>{\n      console.log(error)\n    });\n  }\n  formStud = this.fb.group({\n    name:['', Validators.required],\n    address:['',Validators.required],\n    school:['',Validators.required],\n    gradeId:['',Validators.required],\n  })\n  changeGrade(event:Event)\n  {\n    console.log(event);\n  }\n  addStudent(){\n    console.log('Student Added')\n  }\n}\n","<form [formGroup]=\"formStud\" class=\"p-fluid grid formgrid\">\n    <!-- Name and Address Fields in One Row -->\n    <div class=\"field col-12 md:col-6\">\n        <label for=\"name\">Name</label>\n        <span class=\"p-input-icon-left w-full\">\n            <i class=\"pi pi-user\"></i> <!-- Add an icon inside the input -->\n            <input type=\"text\" id=\"name\" pInputText formControlName=\"name\" placeholder=\"Enter Name...\" />\n        </span>\n        <small class=\"p-error block\" *ngIf=\"formStud.controls['name'].invalid && formStud.controls['name'].dirty\">\n            Name is Required\n        </small>\n    </div>\n\n    <div class=\"field col-12 md:col-6\">\n        <label for=\"address\">Address</label>\n        <input type=\"text\" id=\"address\" pInputText formControlName=\"address\" placeholder=\"Enter Address...\" />\n        <small class=\"p-error block\" *ngIf=\"formStud.controls['address'].invalid && formStud.controls['address'].dirty\">\n            Address is Required\n        </small>\n    </div>\n\n    <!-- School and Grade Fields in One Row -->\n    <div class=\"field col-12 md:col-6\">\n        <label for=\"school\">School</label>\n        <input type=\"text\" id=\"school\" pInputText formControlName=\"school\" placeholder=\"Enter School Name...\" />\n        <small class=\"p-error block\" *ngIf=\"formStud.controls['school'].invalid && formStud.controls['school'].dirty\">\n            School is Required\n        </small>\n    </div>\n\n    <div class=\"field col-12 md:col-6\">\n        <label for=\"GradeId\">Grade</label>\n        <p-dropdown \n            id=\"GradeId\" \n            [options]=\"grades\" \n            formControlName=\"gradeId\" \n            optionLabel=\"name\" \n            placeholder=\"Select a Grade\"\n            [filter]=\"true\" \n            [showClear]=\"true\" \n            [editable]=\"true\" \n            [style]=\"{'width': '100%'}\">\n        </p-dropdown>\n        <small class=\"p-error block\" *ngIf=\"formStud.controls['gradeId'].invalid && formStud.controls['gradeId'].dirty\">\n            Grade is Required\n        </small>\n    </div>\n\n    <!-- Submit Button Spanning Full Width -->\n    <div class=\"col-12\">\n        <p-button (click)=\"addStudent()\" label=\"Add Student\" [disabled]=\"!formStud.valid\" class=\"w-full\"></p-button>\n    </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}