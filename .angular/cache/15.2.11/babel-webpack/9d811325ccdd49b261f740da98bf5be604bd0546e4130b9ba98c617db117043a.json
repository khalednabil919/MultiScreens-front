{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/students.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"primeng/dropdown\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/inputtext\";\nimport * as i7 from \"../list-subjects/list-subjects.component\";\nfunction AddSubjectComponent_small_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 13);\n    i0.ɵɵtext(1, \"Name is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddSubjectComponent_small_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 13);\n    i0.ɵɵtext(1, \"Teacher is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddSubjectComponent {\n  constructor(fb, studentService) {\n    this.fb = fb;\n    this.studentService = studentService;\n    this.teachers = [];\n    this.id = 0;\n    this.add = true;\n  }\n  ngOnInit() {\n    this.initiateForm();\n    this.studentService.diableSubjectForm.subscribe(x => {\n      if (x) this.formSub.disable();else this.formSub.enable();\n    });\n    this.studentService.mySubject.subscribe(x => {\n      console.log(this.formSub.get('teacher').value, x);\n      if (!this.formSub.get('teacher').value || x !== this.formSub.get('teacher').value.gradeId) {\n        this.formSub.get('teacher').setValue('');\n        this.formSub.markAsPristine();\n        this.getTeachers(x);\n      }\n    });\n    this.deleteTeacherAfterDeleteSubject();\n    this.updateSubject();\n  }\n  initiateForm() {\n    this.formSub = this.fb.group({\n      id: [''],\n      name: ['', Validators.required],\n      teacher: ['', Validators.required]\n    });\n  }\n  getTeachers(gradeId) {\n    this.studentService.getTeachers(gradeId).subscribe(response => {\n      this.teachers = [];\n      console.log(\"this.teachers\", this.teachers);\n      // this.teachers = response.data.map((teacher:any) => ({\n      //   ...teacher,\n      //   isActive: false\n      // }));\n      this.teachers = response.data;\n      this.teachers.forEach(x => x.isActive = false);\n      this.teachers.forEach(tea => {\n        let selectedTeachers = this.studentService.selectedTeacher;\n        console.log(\"selectedTeachers\", selectedTeachers);\n        var response = selectedTeachers.find(x => x.id === tea.id);\n        console.log(\"response\", response);\n        if (response) tea.isActive = true;\n      });\n      console.log(\"this.teachers\", this.teachers);\n    }, error => {\n      console.log(error);\n    });\n  }\n  addSubject() {\n    if (!this.formSub.valid) return;\n    this.id += 1;\n    let formValue = this.formSub.value;\n    console.log('formValue', formValue);\n    console.log(formValue);\n    if (formValue.id === '' || formValue.id === null) formValue.id = this.id;\n    this.studentService.AddSubjectToList.next(this.formSub.value);\n    this.teachers = this.teachers.map(teacher => teacher.id === formValue.teacher.id ? {\n      ...teacher,\n      isActive: true\n    } : teacher);\n    this.formSub.reset('');\n    this.formSub.get('teacher').markAsPristine();\n    console.log(formValue);\n    console.log(this.teachers);\n    this.add = true;\n  }\n  deleteTeacherAfterDeleteSubject() {\n    this.studentService.deleteTeacher.subscribe(x => {\n      this.teachers.forEach(y => {\n        if (y.id === x) y.isActive = false;\n      });\n    });\n  }\n  updateSubject() {\n    this.studentService.updateSubject.subscribe(x => {\n      this.add = false;\n      this.formSub.get('name').setValue(x.name);\n      console.log(x);\n      console.log(x.teacher);\n      this.teachers.forEach(y => {\n        if (y.id === x.teacher.id) y.isActive = false;\n      });\n      debugger;\n      this.formSub.get('teacher').setValue(x.teacher);\n      this.formSub.get('id').setValue(x.id);\n    });\n  }\n  static {\n    this.ɵfac = function AddSubjectComponent_Factory(t) {\n      return new (t || AddSubjectComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.StudentsService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddSubjectComponent,\n      selectors: [[\"app-add-subject\"]],\n      decls: 22,\n      vars: 10,\n      consts: [[1, \"container\", \"mt-5\", \"d-flex\"], [1, \"col-4\"], [3, \"formGroup\"], [\"type\", \"number\", \"pInputNumber\", \"\", \"formControlName\", \"id\", \"hidden\", \"\"], [1, \"row\", \"mb-3\"], [\"for\", \"name\", 1, \"col-sm-2\", \"col-form-label\"], [1, \"col-sm-10\"], [\"type\", \"text\", \"id\", \"name\", \"pInputText\", \"\", \"formControlName\", \"name\", \"placeholder\", \"Enter Name...\", 1, \"form-control\"], [\"class\", \"p-error block\", 4, \"ngIf\"], [\"for\", \"TeacherId\", 1, \"col-sm-2\", \"col-form-label\"], [\"optionLabel\", \"name\", \"optionDisabled\", \"isActive\", \"formControlName\", \"teacher\", \"placeholder\", \"Select a teacher\", 1, \"form-control\", \"p-dropdown\", 3, \"options\", \"ngModel\", \"editable\", \"showClear\", \"filter\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", \"w-100\", 3, \"label\", \"disabled\", \"click\"], [1, \"col-8\"], [1, \"p-error\", \"block\"]],\n      template: function AddSubjectComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n          i0.ɵɵelement(3, \"input\", 3);\n          i0.ɵɵelementStart(4, \"div\", 4)(5, \"label\", 5);\n          i0.ɵɵtext(6, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\", 6);\n          i0.ɵɵelement(8, \"input\", 7)(9, \"br\");\n          i0.ɵɵtemplate(10, AddSubjectComponent_small_10_Template, 2, 0, \"small\", 8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"label\", 9);\n          i0.ɵɵtext(12, \"Teacher\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 6)(14, \"p-dropdown\", 10);\n          i0.ɵɵlistener(\"ngModelChange\", function AddSubjectComponent_Template_p_dropdown_ngModelChange_14_listener($event) {\n            return ctx.selectedTeacher = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"br\");\n          i0.ɵɵtemplate(16, AddSubjectComponent_small_16_Template, 2, 0, \"small\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"br\");\n          i0.ɵɵelementStart(18, \"div\", 6)(19, \"p-button\", 11);\n          i0.ɵɵlistener(\"click\", function AddSubjectComponent_Template_p_button_click_19_listener() {\n            return ctx.addSubject();\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(20, \"div\", 12);\n          i0.ɵɵelement(21, \"app-list-subjects\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.formSub);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.formSub.controls[\"name\"].invalid && ctx.formSub.controls[\"name\"].dirty);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"options\", ctx.teachers)(\"ngModel\", ctx.selectedTeacher)(\"editable\", true)(\"showClear\", true)(\"filter\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.formSub.controls[\"teacher\"].invalid && ctx.formSub.controls[\"teacher\"].dirty);\n          i0.ɵɵadvance(3);\n          i0.ɵɵpropertyInterpolate(\"label\", ctx.add ? \"addSubject\" : \"editSubject\");\n          i0.ɵɵproperty(\"disabled\", !ctx.formSub.valid);\n        }\n      },\n      dependencies: [i3.NgIf, i4.Dropdown, i5.Button, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.InputText, i7.ListSubjectsComponent],\n      styles: [\".container[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    gap: 20px; \\r\\n  }\\r\\n  \\r\\n  .col-4[_ngcontent-%COMP%] {\\r\\n    flex: 1; \\r\\n  }\\r\\n  \\r\\n  .col-8[_ngcontent-%COMP%] {\\r\\n    flex: 2; \\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc3R1ZGVudHMvY29tcG9uZW50cy9hZGQtc3ViamVjdC9hZGQtc3ViamVjdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLFNBQVMsRUFBRSxnRUFBZ0U7RUFDN0U7O0VBRUE7SUFDRSxPQUFPLEVBQUUscUNBQXFDO0VBQ2hEOztFQUVBO0lBQ0UsT0FBTyxFQUFFLDJCQUEyQjtFQUN0QyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGdhcDogMjBweDsgLyogT3B0aW9uYWw6IEFkZHMgc3BhY2UgYmV0d2VlbiB0aGUgZm9ybSBhbmQgYXBwLWxpc3Qtc3ViamVjdHMgKi9cclxuICB9XHJcbiAgXHJcbiAgLmNvbC00IHtcclxuICAgIGZsZXg6IDE7IC8qIDQwJSB3aWR0aCBmb3IgdGhlIGxpc3QgY29tcG9uZW50ICovXHJcbiAgfVxyXG4gIFxyXG4gIC5jb2wtOCB7XHJcbiAgICBmbGV4OiAyOyAvKiA2MCUgd2lkdGggZm9yIHRoZSBmb3JtICovXHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","AddSubjectComponent","constructor","fb","studentService","ngOnInit","initiateForm","diableSubjectForm","subscribe","x","formSub","disable","enable","mySubject","console","log","get","value","gradeId","setValue","markAsPristine","getTeachers","deleteTeacherAfterDeleteSubject","updateSubject","group","id","name","required","teacher","response","teachers","data","forEach","isActive","tea","selectedTeachers","selectedTeacher","find","error","addSubject","valid","formValue","AddSubjectToList","next","map","reset","add","deleteTeacher","y","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Khaled\\Angular-Projects\\MultiScreen-Primeng\\src\\app\\students\\components\\add-subject\\add-subject.component.ts","D:\\Khaled\\Angular-Projects\\MultiScreen-Primeng\\src\\app\\students\\components\\add-subject\\add-subject.component.html"],"sourcesContent":["import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { StudentsService } from '../../services/students.service';\nimport { Teacher } from '../../models/teacher';\n\n@Component({\n  selector: 'app-add-subject',\n  templateUrl: './add-subject.component.html',\n  styleUrls: ['./add-subject.component.css']\n})\nexport class AddSubjectComponent implements OnInit{\n  formSub:any;\n  selectedTeacher:any;\n  gradeId:any\n  teachers:Teacher[]=[];\n  id:number=0;\n  add=true;\n  constructor(private fb:FormBuilder, private studentService:StudentsService){}\n  ngOnInit()\n  {\n    this.initiateForm();\n    this.studentService.diableSubjectForm.subscribe(x=>{\n      if(x)\n        this.formSub.disable();\n      else\n        this.formSub.enable();\n    })\n    this.studentService.mySubject.subscribe(x=>{\n\n      console.log(this.formSub.get('teacher').value,x)\n        if( !this.formSub.get('teacher').value || x !== this.formSub.get('teacher').value.gradeId)\n        {\n          this.formSub.get('teacher').setValue('');\n          this.formSub.markAsPristine()\n          this.getTeachers(x);\n        }\n    })\n   \n   this.deleteTeacherAfterDeleteSubject();\n   this.updateSubject();\n  }\n  initiateForm()\n  {\n    this.formSub= this.fb.group({\n      id:[''],\n      name:['', Validators.required],\n      teacher:['',Validators.required],\n    })\n  \n  }\n\n  getTeachers(gradeId:number)\n  {\n    this.studentService.getTeachers(gradeId).subscribe(response=>{\n      this.teachers=[];\n      console.log(\"this.teachers\",this.teachers);\n\n      // this.teachers = response.data.map((teacher:any) => ({\n      //   ...teacher,\n      //   isActive: false\n      // }));\n\n      this.teachers = response.data;\n      this.teachers.forEach(x=>x.isActive = false);\n      this.teachers.forEach(tea=>{\n        \n        let selectedTeachers = this.studentService.selectedTeacher;\n        console.log(\"selectedTeachers\",selectedTeachers)\n        var response = selectedTeachers.find(x=>x.id === tea.id);\n        console.log(\"response\",response)\n        if(response)\n          tea.isActive = true;\n      })\n\n      console.log(\"this.teachers\",this.teachers);\n          },error=>{\n      console.log(error);\n    })\n  }\n  addSubject(){\n    if (!this.formSub.valid) \n      return; \n    \n    this.id +=1;\n    let formValue = this.formSub.value;\n    console.log('formValue',formValue)\n    console.log(formValue);\n    if(formValue.id === '' || formValue.id === null)\n      formValue.id = this.id;\n    \n    this.studentService.AddSubjectToList.next(this.formSub.value);\n\n    this.teachers = this.teachers.map(teacher =>\n      teacher.id === formValue.teacher.id ? { ...teacher, isActive: true } : teacher\n    );\n    this.formSub.reset('')\n    this.formSub.get('teacher').markAsPristine();\n    console.log(formValue);\n    console.log(this.teachers)\n    this.add=true;\n  }\n\n  deleteTeacherAfterDeleteSubject()\n  {\n    this.studentService.deleteTeacher.subscribe(x=>{\n\n      this.teachers.forEach(y=>{\n        if(y.id === x)\n          y.isActive = false;\n      })\n    })\n  }\n  updateSubject()\n  {\n    this.studentService.updateSubject.subscribe(x=>{\n      this.add = false;\n      this.formSub.get('name').setValue(x.name);\n      console.log(x)\n      console.log(x.teacher);\n      this.teachers.forEach(y=>{\n        if(y.id===x.teacher.id)\n          y.isActive = false;\n      })\n\n\n      debugger;\n      this.formSub.get('teacher').setValue(x.teacher);\n      this.formSub.get('id').setValue(x.id);\n    })\n  }\n\n}\n\n\n","<div class=\"container mt-5 d-flex\">\n    <!-- Left Section: app-list-subjects -->\n    <div class=\"col-4\">\n        <form [formGroup]=\"formSub\">\n            <input type=\"number\" pInputNumber formControlName=\"id\" hidden>\n            <div class=\"row mb-3\">\n              <label for=\"name\" class=\"col-sm-2 col-form-label\">Name</label>\n              <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"name\" pInputText formControlName=\"name\" placeholder=\"Enter Name...\" />\n                <br />\n                <small class=\"p-error block\" *ngIf=\"formSub.controls['name'].invalid && formSub.controls['name'].dirty\">Name is Required</small>\n              </div>\n            </div>\n      \n            <label for=\"TeacherId\" class=\"col-sm-2 col-form-label\">Teacher</label>\n            <div class=\"col-sm-10\">\n              <p-dropdown \n                [options]=\"teachers\" \n                [(ngModel)]=\"selectedTeacher\" \n                optionLabel=\"name\" \n                optionDisabled=\"isActive\"\n                formControlName=\"teacher\"\n                placeholder=\"Select a teacher\" \n                [editable]=\"true\" \n                [showClear]=\"true\" \n                [filter]=\"true\" \n                class=\"form-control p-dropdown\">\n              </p-dropdown>\n              <br />\n              <small class=\"p-error block\" *ngIf=\"formSub.controls['teacher'].invalid && formSub.controls['teacher'].dirty\">Teacher is Required</small>\n            </div>\n            <br />\n            <div class=\"col-sm-10\">\n              <p-button (click)=\"addSubject()\" label=\"{{add?'addSubject':'editSubject'}}\" [disabled]=\"!formSub.valid\" class=\"btn btn-primary w-100\"></p-button>\n            </div>\n          </form>\n    </div>\n  \n    <!-- Right Section: Form -->\n    <div class=\"col-8\">\n        <app-list-subjects ></app-list-subjects>\n\n    </div>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}