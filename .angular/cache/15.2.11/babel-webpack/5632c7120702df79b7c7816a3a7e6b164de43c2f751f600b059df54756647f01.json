{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/students.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"primeng/dropdown\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/inputtext\";\nimport * as i7 from \"../list-subjects/list-subjects.component\";\nfunction AddSubjectComponent_small_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 12);\n    i0.ɵɵtext(1, \"Name is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddSubjectComponent_small_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 12);\n    i0.ɵɵtext(1, \"Teacher is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddSubjectComponent {\n  constructor(fb, studentService) {\n    this.fb = fb;\n    this.studentService = studentService;\n    this.teachers = [];\n  }\n  ngOnInit() {\n    this.initiateForm();\n    this.studentService.diableSubjectForm.subscribe(x => {\n      if (x) this.formSub.disable();else this.formSub.enable();\n    });\n    this.studentService.mySubject.subscribe(x => {\n      console.log(this.formSub.get('teacher').value, x);\n      if (x !== this.formSub.get('teacher').value.gradeId) {\n        this.formSub.get('teacher').setValue('');\n        this.formSub.markAsPristine();\n        this.getTeachers(x);\n      }\n    });\n  }\n  initiateForm() {\n    this.formSub = this.fb.group({\n      name: ['', Validators.required],\n      teacher: ['', Validators.required]\n    });\n  }\n  getTeachers(gradeId) {\n    this.studentService.getTeachers(gradeId).subscribe(response => {\n      this.teachers = response.data.map(teacher => ({\n        ...teacher,\n        isActive: false\n      }));\n      console.log(this.teachers);\n    }, error => {\n      console.log(error);\n    });\n  }\n  addSubject() {\n    let formValue = this.formSub.value;\n    this.studentService.AddSubjectToList.next(this.formSub.value);\n    // this.teachers = this.teachers.map(teacher =>\n    //   teacher.id === formValue.teacher.id ? { ...teacher, iActive: false } : teacher\n    // );\n    // console.log(formValue);\n    // console.log(this.teachers)\n  }\n\n  static {\n    this.ɵfac = function AddSubjectComponent_Factory(t) {\n      return new (t || AddSubjectComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.StudentsService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddSubjectComponent,\n      selectors: [[\"app-add-subject\"]],\n      decls: 21,\n      vars: 9,\n      consts: [[1, \"container\", \"mt-5\", \"d-flex\"], [1, \"col-4\"], [3, \"formGroup\"], [1, \"row\", \"mb-3\"], [\"for\", \"name\", 1, \"col-sm-2\", \"col-form-label\"], [1, \"col-sm-10\"], [\"type\", \"text\", \"id\", \"name\", \"pInputText\", \"\", \"formControlName\", \"name\", \"placeholder\", \"Enter Name...\", 1, \"form-control\"], [\"class\", \"p-error block\", 4, \"ngIf\"], [\"for\", \"TeacherId\", 1, \"col-sm-2\", \"col-form-label\"], [\"optionLabel\", \"name\", \"optionDisabled\", \"!isActive\", \"formControlName\", \"teacher\", \"placeholder\", \"Select a teacher\", 1, \"form-control\", \"p-dropdown\", 3, \"options\", \"ngModel\", \"editable\", \"showClear\", \"filter\", \"ngModelChange\"], [\"label\", \"addSubject\", 1, \"btn\", \"btn-primary\", \"w-100\", 3, \"disabled\", \"click\"], [1, \"col-8\"], [1, \"p-error\", \"block\"]],\n      template: function AddSubjectComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2)(3, \"div\", 3)(4, \"label\", 4);\n          i0.ɵɵtext(5, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 5);\n          i0.ɵɵelement(7, \"input\", 6)(8, \"br\");\n          i0.ɵɵtemplate(9, AddSubjectComponent_small_9_Template, 2, 0, \"small\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"label\", 8);\n          i0.ɵɵtext(11, \"Teacher\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 5)(13, \"p-dropdown\", 9);\n          i0.ɵɵlistener(\"ngModelChange\", function AddSubjectComponent_Template_p_dropdown_ngModelChange_13_listener($event) {\n            return ctx.selectedTeacher = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"br\");\n          i0.ɵɵtemplate(15, AddSubjectComponent_small_15_Template, 2, 0, \"small\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"br\");\n          i0.ɵɵelementStart(17, \"div\", 5)(18, \"p-button\", 10);\n          i0.ɵɵlistener(\"click\", function AddSubjectComponent_Template_p_button_click_18_listener() {\n            return ctx.addSubject();\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(19, \"div\", 11);\n          i0.ɵɵelement(20, \"app-list-subjects\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.formSub);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.formSub.controls[\"name\"].invalid && ctx.formSub.controls[\"name\"].dirty);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"options\", ctx.teachers)(\"ngModel\", ctx.selectedTeacher)(\"editable\", true)(\"showClear\", true)(\"filter\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.formSub.controls[\"teacher\"].invalid && ctx.formSub.controls[\"teacher\"].dirty);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", !ctx.formSub.valid);\n        }\n      },\n      dependencies: [i3.NgIf, i4.Dropdown, i5.Button, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.InputText, i7.ListSubjectsComponent],\n      styles: [\".container[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    gap: 20px; \\r\\n  }\\r\\n  \\r\\n  .col-4[_ngcontent-%COMP%] {\\r\\n    flex: 1; \\r\\n  }\\r\\n  \\r\\n  .col-8[_ngcontent-%COMP%] {\\r\\n    flex: 2; \\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc3R1ZGVudHMvY29tcG9uZW50cy9hZGQtc3ViamVjdC9hZGQtc3ViamVjdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLFNBQVMsRUFBRSxnRUFBZ0U7RUFDN0U7O0VBRUE7SUFDRSxPQUFPLEVBQUUscUNBQXFDO0VBQ2hEOztFQUVBO0lBQ0UsT0FBTyxFQUFFLDJCQUEyQjtFQUN0QyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGdhcDogMjBweDsgLyogT3B0aW9uYWw6IEFkZHMgc3BhY2UgYmV0d2VlbiB0aGUgZm9ybSBhbmQgYXBwLWxpc3Qtc3ViamVjdHMgKi9cclxuICB9XHJcbiAgXHJcbiAgLmNvbC00IHtcclxuICAgIGZsZXg6IDE7IC8qIDQwJSB3aWR0aCBmb3IgdGhlIGxpc3QgY29tcG9uZW50ICovXHJcbiAgfVxyXG4gIFxyXG4gIC5jb2wtOCB7XHJcbiAgICBmbGV4OiAyOyAvKiA2MCUgd2lkdGggZm9yIHRoZSBmb3JtICovXHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","AddSubjectComponent","constructor","fb","studentService","ngOnInit","initiateForm","diableSubjectForm","subscribe","x","formSub","disable","enable","mySubject","console","log","get","value","gradeId","setValue","markAsPristine","getTeachers","group","name","required","teacher","response","teachers","data","map","isActive","error","addSubject","formValue","AddSubjectToList","next","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Khaled\\Angular-Projects\\MultiScreen-Primeng\\src\\app\\students\\components\\add-subject\\add-subject.component.ts","D:\\Khaled\\Angular-Projects\\MultiScreen-Primeng\\src\\app\\students\\components\\add-subject\\add-subject.component.html"],"sourcesContent":["import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { StudentsService } from '../../services/students.service';\nimport { Teacher } from '../../models/teacher';\n\n@Component({\n  selector: 'app-add-subject',\n  templateUrl: './add-subject.component.html',\n  styleUrls: ['./add-subject.component.css']\n})\nexport class AddSubjectComponent implements OnInit{\n  formSub:any;\n  selectedTeacher:any;\n  gradeId:any\n  teachers:Teacher[]=[];\n  constructor(private fb:FormBuilder, private studentService:StudentsService){}\n  ngOnInit()\n  {\n    this.initiateForm();\n    this.studentService.diableSubjectForm.subscribe(x=>{\n      if(x)\n        this.formSub.disable();\n      else\n        this.formSub.enable();\n    })\n    this.studentService.mySubject.subscribe(x=>{\n      console.log(this.formSub.get('teacher').value,x)\n        if(x !== this.formSub.get('teacher').value.gradeId)\n        {\n          this.formSub.get('teacher').setValue('');\n          this.formSub.markAsPristine()\n          this.getTeachers(x);\n        }\n    })\n   \n   \n  }\n  initiateForm()\n  {\n    this.formSub= this.fb.group({\n      name:['', Validators.required],\n      teacher:['',Validators.required],\n    })\n  \n  }\n\n  getTeachers(gradeId:number)\n  {\n    this.studentService.getTeachers(gradeId).subscribe(response=>{\n      this.teachers = response.data.map((teacher:any) => ({\n        ...teacher,\n        isActive: false\n      }));\n\n      console.log(this.teachers);\n          },error=>{\n      console.log(error);\n    })\n  }\n  addSubject(){\n\n    let formValue = this.formSub.value;\n    \n    this.studentService.AddSubjectToList.next(this.formSub.value);\n\n    // this.teachers = this.teachers.map(teacher =>\n    //   teacher.id === formValue.teacher.id ? { ...teacher, iActive: false } : teacher\n    // );\n    // console.log(formValue);\n    // console.log(this.teachers)\n  }\n}\n","<div class=\"container mt-5 d-flex\">\n    <!-- Left Section: app-list-subjects -->\n    <div class=\"col-4\">\n        <form [formGroup]=\"formSub\">\n            <div class=\"row mb-3\">\n              <label for=\"name\" class=\"col-sm-2 col-form-label\">Name</label>\n              <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" id=\"name\" pInputText formControlName=\"name\" placeholder=\"Enter Name...\" />\n                <br />\n                <small class=\"p-error block\" *ngIf=\"formSub.controls['name'].invalid && formSub.controls['name'].dirty\">Name is Required</small>\n              </div>\n            </div>\n      \n            <label for=\"TeacherId\" class=\"col-sm-2 col-form-label\">Teacher</label>\n            <div class=\"col-sm-10\">\n              <p-dropdown \n                [options]=\"teachers\" \n                [(ngModel)]=\"selectedTeacher\" \n                optionLabel=\"name\" \n                optionDisabled=\"!isActive\"\n                formControlName=\"teacher\"\n                placeholder=\"Select a teacher\" \n                [editable]=\"true\" \n                [showClear]=\"true\" \n                [filter]=\"true\" \n                class=\"form-control p-dropdown\">\n              </p-dropdown>\n              <br />\n              <small class=\"p-error block\" *ngIf=\"formSub.controls['teacher'].invalid && formSub.controls['teacher'].dirty\">Teacher is Required</small>\n            </div>\n            <br />\n            <div class=\"col-sm-10\">\n              <p-button (click)=\"addSubject()\" label=\"addSubject\" [disabled]=\"!formSub.valid\" class=\"btn btn-primary w-100\"></p-button>\n            </div>\n          </form>\n    </div>\n  \n    <!-- Right Section: Form -->\n    <div class=\"col-8\">\n        <app-list-subjects ></app-list-subjects>\n\n    </div>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}